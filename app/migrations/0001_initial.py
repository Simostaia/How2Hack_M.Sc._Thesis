# Generated by Django 2.1.15 on 2021-11-12 15:03

import app.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CTFd_configs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_API', models.CharField(max_length=220)),
                ('token_API', models.CharField(max_length=64)),
                ('port_API', models.IntegerField(default=8000, validators=[app.models.validate_flag])),
            ],
            options={
                'verbose_name': 'Configurazione per la connessione CTFd',
                'verbose_name_plural': 'Configurazione per la connessione CTFd',
            },
        ),
        migrations.CreateModel(
            name='CyberKillChain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intro', models.TextField(default='')),
                ('recon', models.TextField()),
                ('weapon', models.TextField()),
                ('delivery', models.TextField()),
                ('exploitation', models.TextField()),
                ('installation', models.TextField()),
                ('command_and_control', models.TextField()),
                ('exfiltration', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Lab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=120)),
                ('sotto_titolo', models.CharField(default='', max_length=120)),
                ('docker_name', models.CharField(max_length=120)),
                ('descrizione', models.TextField()),
                ('documentazione', models.TextField(default='')),
                ('flag', models.CharField(default='', max_length=220)),
                ('categoria', models.CharField(default='', max_length=120, verbose_name='Categoria della challenge')),
                ('valore_flag', models.IntegerField(default=10, validators=[app.models.validate_flag], verbose_name='Punteggio della flag')),
                ('hint', models.CharField(blank=True, default='', max_length=220, null=True)),
                ('hint_cost', models.IntegerField(blank=True, default=4, null=True, validators=[app.models.validate_flag], verbose_name='Costo del Hint')),
                ('durata_secondi', models.IntegerField(default=3600, help_text='Esempio: 3600 secondi sono 1 ora, 300 secondi sono 5 minuti', validators=[app.models.validate_flag], verbose_name='Durata massima in secondi')),
                ('cap_add', models.CharField(choices=[('NET_ADMIN', 'Net Admin')], default='NET_ADMIN', max_length=32)),
                ('detach', models.CharField(choices=[('True', 'True'), ('False', 'False')], default='True', max_length=32)),
                ('auto_remove', models.CharField(choices=[('True', 'True'), ('False', 'False')], default='True', max_length=32)),
            ],
            options={
                'verbose_name': 'Laboratori',
                'verbose_name_plural': 'Laboratori',
            },
        ),
        migrations.CreateModel(
            name='Notifica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('testo', models.CharField(max_length=120)),
                ('link', models.CharField(max_length=220)),
                ('destinatario', models.CharField(help_text="Inserire l'id dell utente, per mandare singolarmente una notifica a quell'utente, oppure la parola 'tutti' per mandarla a tutti gli utenti", max_length=50)),
            ],
            options={
                'verbose_name': 'Notifiche',
                'verbose_name_plural': 'Notifiche',
            },
        ),
        migrations.CreateModel(
            name='Notifica_vista',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stato', models.CharField(max_length=120)),
                ('notifica_id', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifica_id', to='app.Notifica')),
            ],
        ),
        migrations.CreateModel(
            name='SSHTunnel_configs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FULL_PATH_SSH_KEY', models.CharField(default='', max_length=220)),
                ('USER_SERVER', models.CharField(default='', max_length=64)),
                ('DNS_NAME_SERVER', models.CharField(default='', max_length=220)),
                ('LOCAL_PORT', models.IntegerField(default='', validators=[app.models.validate_flag])),
                ('REMOTE_PORT', models.IntegerField(default='', validators=[app.models.validate_flag])),
            ],
            options={
                'verbose_name': 'Configurazione per la connessione alla macchina Docker',
                'verbose_name_plural': 'Configurazione per la connessione alla macchina Docker',
            },
        ),
        migrations.CreateModel(
            name='Statistiche',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lab_avviati', models.IntegerField(default=0, validators=[app.models.validate_flag])),
                ('flag_trovate', models.IntegerField(default=0, validators=[app.models.validate_flag])),
                ('guide_lette', models.IntegerField(default=0, validators=[app.models.validate_flag])),
                ('punteggio', models.IntegerField(default=0, validators=[app.models.validate_flag])),
            ],
            options={
                'verbose_name': "Statistiche dell'utente",
                'verbose_name_plural': "Statistiche dell'utente",
            },
        ),
        migrations.CreateModel(
            name='Tag_Args',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('colore', models.CharField(help_text='Inserire un colore esadecimale, esempio: #DCB50A', max_length=7, unique=True)),
                ('argomento', models.CharField(max_length=20)),
                ('spiegazione', models.TextField(default='')),
            ],
            options={
                'verbose_name': 'Argomenti per laboratori',
                'verbose_name_plural': 'Argomenti per laboratori',
            },
        ),
        migrations.CreateModel(
            name='Tag_Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('colore', models.CharField(help_text='Inserire un colore esadecimale, esempio: #DCB50A', max_length=7, unique=True)),
                ('livello', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name': 'Livelli di difficoltà per laboratori',
                'verbose_name_plural': 'Livelli di difficoltà per laboratori',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('nome', models.CharField(max_length=120)),
                ('cognome', models.CharField(max_length=120)),
                ('username', models.CharField(error_messages={'unique': 'Username già utilizzato'}, max_length=120, unique=True)),
                ('password', models.CharField(max_length=120)),
                ('professione', models.CharField(max_length=120)),
                ('email', models.EmailField(error_messages={'unique': 'Email già utilizzata'}, max_length=120, unique=True)),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('porta_vpn', models.CharField(default='', max_length=10)),
                ('id_ctfd', models.CharField(default='', max_length=10)),
                ('pwd_ctfd', models.CharField(default='', max_length=120)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='statistiche',
            name='user_id',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_id_stat', to='app.User'),
        ),
        migrations.AddField(
            model_name='notifica_vista',
            name='user_id',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_id', to='app.User'),
        ),
        migrations.AddField(
            model_name='lab',
            name='argomento_1',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='argo1', to='app.Tag_Args'),
        ),
        migrations.AddField(
            model_name='lab',
            name='argomento_10',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='argo10', to='app.Tag_Args'),
        ),
        migrations.AddField(
            model_name='lab',
            name='argomento_11',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='argo11', to='app.Tag_Args'),
        ),
        migrations.AddField(
            model_name='lab',
            name='argomento_2',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='argo2', to='app.Tag_Args'),
        ),
        migrations.AddField(
            model_name='lab',
            name='argomento_3',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='argo3', to='app.Tag_Args'),
        ),
        migrations.AddField(
            model_name='lab',
            name='argomento_4',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='argo4', to='app.Tag_Args'),
        ),
        migrations.AddField(
            model_name='lab',
            name='argomento_5',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='argo5', to='app.Tag_Args'),
        ),
        migrations.AddField(
            model_name='lab',
            name='argomento_6',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='argo6', to='app.Tag_Args'),
        ),
        migrations.AddField(
            model_name='lab',
            name='argomento_7',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='argo7', to='app.Tag_Args'),
        ),
        migrations.AddField(
            model_name='lab',
            name='argomento_8',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='argo8', to='app.Tag_Args'),
        ),
        migrations.AddField(
            model_name='lab',
            name='argomento_9',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='argo9', to='app.Tag_Args'),
        ),
        migrations.AddField(
            model_name='lab',
            name='livello',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='livello_diff', to='app.Tag_Level'),
        ),
    ]
